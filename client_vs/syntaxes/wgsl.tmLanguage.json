{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "WGSL",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#function-definition"
		},
		{
			"include": "#function-call"
		},
		{
			"include": "#builtin-functions"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#types"
		},
		{
			"include": "#attributes"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.wgsl",
					"begin": "//",
					"end": "$"
				},
				{
					"name": "comment.block.wgsl",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"function-definition": {
			"patterns": [
				{
					"name": "meta.function.wgsl",
					"begin": "\\b(fn)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
					"beginCaptures": {
						"1": {
							"name": "keyword.other.fn.wgsl"
						},
						"2": {
							"name": "entity.name.function.wgsl"
						}
					},
					"end": "\\)",
					"patterns": [
						{
							"include": "#function-parameters"
						}
					]
				}
			]
		},
		"function-parameters": {
			"patterns": [
				{
					"name": "variable.parameter.wgsl",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*:"
				},
				{
					"include": "#types"
				},
				{
					"include": "#attributes"
				}
			]
		},
		"function-call": {
			"patterns": [
				{
					"name": "meta.function-call.wgsl",
					"begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.call.wgsl"
						}
					},
					"end": "\\)",
					"patterns": [
						{
							"include": "#function-call"
						},
						{
							"include": "#builtin-functions"
						},
						{
							"include": "#expressions"
						}
					]
				}
			]
		},
		"builtin-functions": {
			"patterns": [
				{
					"name": "support.function.builtin.wgsl",
					"match": "\\b(abs|acos|acosh|all|any|asin|asinh|atan|atan2|atanh|ceil|clamp|cos|cosh|cross|degrees|determinant|distance|dot|exp|exp2|faceForward|floor|fma|fract|frexp|inverseSqrt|ldexp|length|log|log2|max|min|mix|modf|normalize|pow|radians|reflect|refract|round|saturate|sign|sin|sinh|smoothstep|sqrt|step|tan|tanh|transpose|trunc)\\b"
				},
				{
					"name": "support.function.texture.wgsl",
					"match": "\\b(textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore)\\b"
				},
				{
					"name": "support.function.atomic.wgsl",
					"match": "\\b(atomicLoad|atomicStore|atomicAdd|atomicSub|atomicMax|atomicMin|atomicAnd|atomicOr|atomicXor|atomicExchange|atomicCompareExchangeWeak)\\b"
				},
				{
					"name": "support.function.pack.wgsl",
					"match": "\\b(pack4x8snorm|pack4x8unorm|pack2x16snorm|pack2x16unorm|pack2x16float|unpack4x8snorm|unpack4x8unorm|unpack2x16snorm|unpack2x16unorm|unpack2x16float)\\b"
				},
				{
					"name": "support.function.derivative.wgsl",
					"match": "\\b(dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|fwidth|fwidthCoarse|fwidthFine)\\b"
				},
				{
					"name": "support.function.barrier.wgsl",
					"match": "\\b(storageBarrier|workgroupBarrier)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.wgsl",
					"match": "\\b(if|else|switch|case|default|for|while|loop|break|continue|return|discard)\\b"
				},
				{
					"name": "keyword.other.wgsl",
					"match": "\\b(fn|var|let|const|struct|alias|override)\\b"
				},
				{
					"name": "storage.modifier.wgsl",
					"match": "\\b(private|workgroup|uniform|storage|function)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.scalar.wgsl",
					"match": "\\b(bool|i32|u32|f32|f16)\\b"
				},
				{
					"name": "storage.type.vector.wgsl",
					"match": "\\b(vec[234][iuf]|vec[234])\\b"
				},
				{
					"name": "storage.type.matrix.wgsl",
					"match": "\\b(mat[234]x[234][fh]?)\\b"
				},
				{
					"name": "storage.type.atomic.wgsl",
					"match": "\\b(atomic<[^>]+>)\\b"
				},
				{
					"name": "storage.type.pointer.wgsl",
					"match": "\\b(ptr<[^>]+>)\\b"
				},
				{
					"name": "storage.type.array.wgsl",
					"match": "\\b(array<[^>]+>)\\b"
				},
				{
					"name": "storage.type.texture.wgsl",
					"match": "\\b(texture_[1-3]d|texture_[1-3]d_array|texture_cube|texture_cube_array|texture_multisampled_2d|texture_external|texture_storage_[1-3]d|texture_storage_[1-3]d_array|texture_depth_[2d|cube]|texture_depth_[2d|cube]_array|texture_depth_multisampled_2d)\\b"
				},
				{
					"name": "storage.type.sampler.wgsl",
					"match": "\\b(sampler|sampler_comparison)\\b"
				}
			]
		},
		"attributes": {
			"patterns": [
				{
					"name": "meta.attribute.wgsl",
					"begin": "@",
					"end": "(?=\\s|$|\\()",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.attribute.wgsl"
						}
					},
					"patterns": [
						{
							"name": "entity.name.attribute.wgsl",
							"match": "\\b(vertex|fragment|compute|workgroup_size|location|builtin|group|binding|size|align|interpolate|invariant)\\b"
						}
					]
				},
				{
					"name": "meta.attribute.with-params.wgsl",
					"begin": "@([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.attribute.wgsl"
						},
						"1": {
							"name": "entity.name.attribute.wgsl"
						}
					},
					"end": "\\)",
					"patterns": [
						{
							"include": "#expressions"
						}
					]
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.language.wgsl",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "constant.other.builtin.wgsl",
					"match": "\\b(position|vertex_index|instance_index|front_facing|frag_depth|sample_index|sample_mask|local_invocation_id|local_invocation_index|global_invocation_id|workgroup_id|num_workgroups)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.wgsl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.wgsl",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.hex.wgsl",
					"match": "\\b0[xX][0-9a-fA-F]+[iuf]?\\b"
				},
				{
					"name": "constant.numeric.float.wgsl",
					"match": "\\b\\d+\\.\\d*([eE][+-]?\\d+)?[fh]?\\b"
				},
				{
					"name": "constant.numeric.float.wgsl",
					"match": "\\b\\d+[eE][+-]?\\d+[fh]?\\b"
				},
				{
					"name": "constant.numeric.integer.wgsl",
					"match": "\\b\\d+[iuf]?\\b"
				}
			]
		},
		"expressions": {
			"patterns": [
				{
					"include": "#function-call"
				},
				{
					"include": "#builtin-functions"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#types"
				}
			]
		}
	},
	"scopeName": "source.wgsl"
}